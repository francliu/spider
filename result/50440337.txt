最近在学习一些数据挖掘的算法，看到了这个算法，也许这个算法对你来说很简单，但对我来说，我是一个初学者，我在网上翻看了很多资料，发现中文社区没有把这个问题讲得很全面很清楚的文章，所以，把我的学习笔记记录下来，分享给大家。
在数据挖掘中，
k-Means算法是一种
clusteranalysis
的算法，其主要是来计算数据聚集的算法，主要通过不断地取离种子点最近均&#20540;的算法。
K-Means算法主要解决的问题如下图所示。我们可以看到，在图的左边有一些点，我们用肉&#30524;可以看出来有四个点群，但是我们怎么通过计算机程序找出这几个点群来呢？于是就出现了我们的K-Means算法（Wikipedia链接）
这个算法其实很简单，如下图所示：

从上图中，我们可以看到，A,B,C,D,E是五个在图中点。而灰色的点是我们的种子点，也就是我们用来找点群的点。有两个种子点，所以K=2。
然后，K-Means的算法如下：
这个算法很简单，但是有些细节我要提一下，求距离的公式我不说了，大家有初中毕业水平的人都应该知道怎么算的。我重点想说一下“求点群中心的算法”
一般来说，求点群中心点的算法你可以很简的使用各个点的X/Y坐标的平均&#20540;。不过，我这里想告诉大家另三个求中心点的的公式：
1）MinkowskiDistance公式——
λ可以随意取&#20540;，可以是负数，也可以是正数，或是无穷大。

2）EuclideanDistance公式——也就是第一个公式
λ=2的情况

3）CityBlockDistance公式——
也就是第一个公式
λ=1的情况

这三个公式的求中心点有一些不一样的地方，我们看下图（对于第一个λ在0-1之间）。
K-Means主要有两个最重大的缺陷——都和初始&#20540;有关：
我在这里重点说一下
K-Means&#43;&#43;算法步骤：
相关的代码你可以在这里找到“implementtheK-means&#43;&#43;algorithm”(墙)另，Apache
的通用数据学库也实现了这一算法
看到这里，你会说，K-Means算法看来很简单，而且好像就是在玩坐标点，没什么真实用处。而且，这个算法缺陷很多，还不如人工呢。是的，前面的例子只是玩二维坐标点，的确没什么意思。但是你想一下下面的几个问题：
只要能把现实世界的物体的属性抽象成向量，就可以用K-Means算法来归类了。
在《k均&#20540;聚类(K-means)》
这篇文章中举了一个很不错的应用例子，作者用亚洲15支足球队的2005年到1010年的战绩做了一个向量表，然后用K-Means把球队归类，得出了下面的结果，呵呵。
其实，这样的业务例子还有很多，比如，分析一个公司的客户分类，这样可以对不同的客户使用不同的商业策略，或是电子商务中分析商品相&#20284;度，归类商品，从而可以使用一些不同的销售策略，等等。
最后给一个挺好的算法的幻灯片：http://www.cs.cmu.edu/~guestrin/Class/10701-S07/Slides/clustering.pdf
最近在学习一些数据挖掘的算法，看到了这个算法，也许这个算法对你来说很简单，但对我来说，我是一个初学者，我在网上翻看了很多资料，发现中文社区没有把这个问题讲得很全面很清楚的文章，所以，把我的学习笔记记录下来，分享给大家。
在数据挖掘中，
k-Means算法是一种
clusteranalysis
的算法，其主要是来计算数据聚集的算法，主要通过不断地取离种子点最近均&#20540;的算法。
K-Means算法主要解决的问题如下图所示。我们可以看到，在图的左边有一些点，我们用肉&#30524;可以看出来有四个点群，但是我们怎么通过计算机程序找出这几个点群来呢？于是就出现了我们的K-Means算法（Wikipedia链接）
这个算法其实很简单，如下图所示：

从上图中，我们可以看到，A,B,C,D,E是五个在图中点。而灰色的点是我们的种子点，也就是我们用来找点群的点。有两个种子点，所以K=2。
然后，K-Means的算法如下：
这个算法很简单，但是有些细节我要提一下，求距离的公式我不说了，大家有初中毕业水平的人都应该知道怎么算的。我重点想说一下“求点群中心的算法”
一般来说，求点群中心点的算法你可以很简的使用各个点的X/Y坐标的平均&#20540;。不过，我这里想告诉大家另三个求中心点的的公式：
1）MinkowskiDistance公式——
λ可以随意取&#20540;，可以是负数，也可以是正数，或是无穷大。

2）EuclideanDistance公式——也就是第一个公式
λ=2的情况

3）CityBlockDistance公式——
也就是第一个公式
λ=1的情况

这三个公式的求中心点有一些不一样的地方，我们看下图（对于第一个λ在0-1之间）。
K-Means主要有两个最重大的缺陷——都和初始&#20540;有关：
我在这里重点说一下
K-Means&#43;&#43;算法步骤：
相关的代码你可以在这里找到“implementtheK-means&#43;&#43;algorithm”(墙)另，Apache
的通用数据学库也实现了这一算法
看到这里，你会说，K-Means算法看来很简单，而且好像就是在玩坐标点，没什么真实用处。而且，这个算法缺陷很多，还不如人工呢。是的，前面的例子只是玩二维坐标点，的确没什么意思。但是你想一下下面的几个问题：
只要能把现实世界的物体的属性抽象成向量，就可以用K-Means算法来归类了。
在《k均&#20540;聚类(K-means)》
这篇文章中举了一个很不错的应用例子，作者用亚洲15支足球队的2005年到1010年的战绩做了一个向量表，然后用K-Means把球队归类，得出了下面的结果，呵呵。
其实，这样的业务例子还有很多，比如，分析一个公司的客户分类，这样可以对不同的客户使用不同的商业策略，或是电子商务中分析商品相&#20284;度，归类商品，从而可以使用一些不同的销售策略，等等。
最后给一个挺好的算法的幻灯片：http://www.cs.cmu.edu/~guestrin/Class/10701-S07/Slides/clustering.pdf
