一、概述
UNIXDomainSocket是在socket架构上发展起来的用于同一台主机的进程间通讯（IPC），它不需要经过网络协议栈，不需要打包拆包、计算校验和、维护序号和应答等，只是将应用层数据从一个进程拷贝到另一个进程。UNIXDomainSocket有SOCK_DGRAM或SOCK_STREAM两种工作模式，类&#20284;于UDP和TCP，但是面向消息的UNIXDomainSocket也是可靠的，消息既不会丢失也不会顺序错乱。
UNIXDomainSocket可用于两个没有亲缘关系的进程，是全双工的，是目前使用最广泛的IPC机制，比如XWindow服务器和GUI程序之间就是通过UNIXDomainSocket通讯的。
二、工作流程
UNIXDomainsocket与网络socket类&#20284;，可以与网络socket对比应用。
上述二者编程的不同如下：
三、阻塞和非阻塞（SOCK_STREAM方式）
读写操作有两种操作方式：阻塞和非阻塞。
1.阻塞模式下
阻塞模式下，发送数据方和接收数据方的表现情况如同命名管道，参见本人文章“Linux下的IPC－命名管道的使用（http://blog.csdn.net/guxch/article/details/6828452）”
2.非阻塞模式
在send或recv函数的标志参数中设置MSG_DONTWAIT，则发送和接收都会返回。如果没有成功，则返回&#20540;为-1，errno为EAGAIN或EWOULDBLOCK。
四、测试代码
服务器端
客户端代码
五、讨论
通过实际测试，发现UNIXDomainSocket与命名管道在表现上有很大的相&#20284;性，例如，UNIXDomainSocket也会在磁盘上创建一个socket类型文件；如果读端进程关闭了，写端进程“写数据”时，有可能使进程异常退出，等等。查阅有关文档，摘录如下：
一、概述
UNIXDomainSocket是在socket架构上发展起来的用于同一台主机的进程间通讯（IPC），它不需要经过网络协议栈，不需要打包拆包、计算校验和、维护序号和应答等，只是将应用层数据从一个进程拷贝到另一个进程。UNIXDomainSocket有SOCK_DGRAM或SOCK_STREAM两种工作模式，类&#20284;于UDP和TCP，但是面向消息的UNIXDomainSocket也是可靠的，消息既不会丢失也不会顺序错乱。
UNIXDomainSocket可用于两个没有亲缘关系的进程，是全双工的，是目前使用最广泛的IPC机制，比如XWindow服务器和GUI程序之间就是通过UNIXDomainSocket通讯的。
二、工作流程
UNIXDomainsocket与网络socket类&#20284;，可以与网络socket对比应用。
上述二者编程的不同如下：
三、阻塞和非阻塞（SOCK_STREAM方式）
读写操作有两种操作方式：阻塞和非阻塞。
1.阻塞模式下
阻塞模式下，发送数据方和接收数据方的表现情况如同命名管道，参见本人文章“Linux下的IPC－命名管道的使用（http://blog.csdn.net/guxch/article/details/6828452）”
2.非阻塞模式
在send或recv函数的标志参数中设置MSG_DONTWAIT，则发送和接收都会返回。如果没有成功，则返回&#20540;为-1，errno为EAGAIN或EWOULDBLOCK。
四、测试代码
服务器端
客户端代码
五、讨论
通过实际测试，发现UNIXDomainSocket与命名管道在表现上有很大的相&#20284;性，例如，UNIXDomainSocket也会在磁盘上创建一个socket类型文件；如果读端进程关闭了，写端进程“写数据”时，有可能使进程异常退出，等等。查阅有关文档，摘录如下：
