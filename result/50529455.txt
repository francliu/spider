Runtime.getRuntime().exec（）方法主要用于执行外部的程序或命令。
Runtime.getRuntime().exec共有六个重载方法：
public
Processexec(Stringcommand)
在单独的进程中执行指定的字符串命令。
public
Processexec(String[]cmdArray)
在单独的进程中执行指定命令和变量
public
Processexec(Stringcommand,String[]envp)
在指定环境的独立进程中执行指定命令和变量
public
Processexec(String[]cmdArray,String[]envp)
在指定环境的独立进程中执行指定的命令和变量
publicProcessexec(Stringcommand,String[]
envp,Filedir)
在有指定环境和工作目录的独立进程中执行指定的字符串命令
publicProcessexec(String[]cmdarray,String[]envp,Filedir)
在指定环境和工作目录的独立进程中执行指定的命令和变量
我们先来比较exec(Stringcommand)与exec(String[]cmdArray)的区别，其实他们是等价的，最终都会调用：
exec(String[]cmdarray,String[]envp,Filedir)，我们看看方法exec(Stringcmdarray,String[]envp,Filedir)throwsIOException的实现代码：
从上面的代码，我们可以看出最终调用的代码都是：exec(String[]cmdArray,Stringenvp,File
dir)。exec(Stringcommand)相当于exec(command,null,null)，exec(String[]cmdArray)相当于exec(cmdArray,null,null)。
参数说明：
cmdarray-包含所调用命令及其参数的数组。
envp-字符串数组，其中每个元素的环境变量的设置&#26684;式为
name=value，如果子进程应该继承当前进程的环境，或该参数为null。
dir-子进程的工作目录；如果子进程应该继承当前进程的工作目录，则该参数为null。

另外，执行exec(Stringcommand)不等同于直接执行commandline命令，比如命令：
这时要用exec(String[]cmdArray)。如例：

关于返回结果类型：Process，它有几个方法：
1.destroy()：杀掉子进程
2.exitValue()：返回子进程的出口&#20540;，&#20540;0表示正常终止
3.getErrorStream()：获取子进程的错误流
4.getInputStream()：获取子进程的输入流
5.getOutputStream()：获取子进程的输出流
6.waitFor()：导致当前线程等待，如有必要，一直要等到由该Process对象表示的进程已经终止。如果已终止该子进程，此方法立即返回。如果没有终止该子进程，调用的线程将被阻塞，直到退出子进程，根据惯例，0表示正常终止

Runtime.getRuntime().exec（）方法主要用于执行外部的程序或命令。
Runtime.getRuntime().exec共有六个重载方法：
public
Processexec(Stringcommand)
在单独的进程中执行指定的字符串命令。
public
Processexec(String[]cmdArray)
在单独的进程中执行指定命令和变量
public
Processexec(Stringcommand,String[]envp)
在指定环境的独立进程中执行指定命令和变量
public
Processexec(String[]cmdArray,String[]envp)
在指定环境的独立进程中执行指定的命令和变量
publicProcessexec(Stringcommand,String[]
envp,Filedir)
在有指定环境和工作目录的独立进程中执行指定的字符串命令
publicProcessexec(String[]cmdarray,String[]envp,Filedir)
在指定环境和工作目录的独立进程中执行指定的命令和变量
我们先来比较exec(Stringcommand)与exec(String[]cmdArray)的区别，其实他们是等价的，最终都会调用：
exec(String[]cmdarray,String[]envp,Filedir)，我们看看方法exec(Stringcmdarray,String[]envp,Filedir)throwsIOException的实现代码：
从上面的代码，我们可以看出最终调用的代码都是：exec(String[]cmdArray,Stringenvp,File
dir)。exec(Stringcommand)相当于exec(command,null,null)，exec(String[]cmdArray)相当于exec(cmdArray,null,null)。
参数说明：
cmdarray-包含所调用命令及其参数的数组。
envp-字符串数组，其中每个元素的环境变量的设置&#26684;式为
name=value，如果子进程应该继承当前进程的环境，或该参数为null。
dir-子进程的工作目录；如果子进程应该继承当前进程的工作目录，则该参数为null。

另外，执行exec(Stringcommand)不等同于直接执行commandline命令，比如命令：
这时要用exec(String[]cmdArray)。如例：

关于返回结果类型：Process，它有几个方法：
1.destroy()：杀掉子进程
2.exitValue()：返回子进程的出口&#20540;，&#20540;0表示正常终止
3.getErrorStream()：获取子进程的错误流
4.getInputStream()：获取子进程的输入流
5.getOutputStream()：获取子进程的输出流
6.waitFor()：导致当前线程等待，如有必要，一直要等到由该Process对象表示的进程已经终止。如果已终止该子进程，此方法立即返回。如果没有终止该子进程，调用的线程将被阻塞，直到退出子进程，根据惯例，0表示正常终止

