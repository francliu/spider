经过多次尝试，模拟登录淘宝终于成功了，实在是不容易，淘宝的登录加密和验证太复杂了，煞费苦心，在此写出来和大家一起分享，希望大家支持。
1.python模拟登录淘宝网页
2.获取登录用户的所有订单详情
3.学会应对出现验证码的情况
4.体会一下复杂的模拟登录机制
1.淘宝的密码用了AES加密算法，最终将密码转化为256位，在POST时，传输的是256位长度的密码。
2.淘宝在登录时必须要输入验证码，在经过几次尝试失败后最终获取了验证码图片让用户手动输入来验证。
3.淘宝另外有复杂且每天在变的ua加密算法，在程序中我们需要提前获取某一ua码才可进行模拟登录。
4.在获取最后的登录st码时，历经了多次请求和正则表达式提取，且st码只可使用一次。
1.手动到浏览器获取ua码以及加密后的密码，只获取一次即可，一劳永逸。
2.向登录界面发送登录请求，POST一系列参数，包括ua码以及密码等等，获得响应，提取验证码图像。
3.用户输入手动验证码，重新加入验证码数据再次用POST方式发出请求，获得响应，提取J_Htoken。
4.利用J_Htoken向alipay发出请求，获得响应，提取st码。
5.利用st码和用户名，重新发出登录请求，获得响应，提取重定向网址，存储cookie。
6.利用cookie向其他个人页面如订单页面发出请求，获得响应，提取订单详情。
是不是没看懂？没事，下面我将一点点说明自己模拟登录的过程，希望大家可以理解。
由于淘宝的ua算法和aes密码加密算法太复杂了，ua算法在淘宝每天都是在变化的，不过，这个内容你获取之后一直用即可，经过测试之后没有问题，一劳永逸。
那么ua和aes密码怎样获取呢？
我们就从浏览器里面直接获取吧，打开浏览器，找到淘宝的登录界面，按F12或者浏览器右键审查元素。
在这里我用的是火狐浏览器，首先记得在浏览器中设置一下显示持续日志，要不然页面跳转了你就看不到之前抓取的信息了。在这里截图如下：


好，那么接下来我们就从浏览器中获取ua和aes密码
点击网络选项卡，这时都是空的，什么数据也没有截取。这时你就在网页上登录一下试试吧，输入用户名啊，密码啊，有必要时需要输入验证码，点击登录。

等跳转成功后，你就可以看到好多日志记录了，点击图中的那一行login.taobo.com，然后查看参数，你就会发现表单数据了，其中就包括ua还有下面的password2，把这俩复制下来，我们之后要用到的。这就是我们需要的ua还有aes加密后的密码。

恩，读到这里，你应该获取到了属于自己的ua和password2两个内容。
经过博主本人亲自验证，有时候，在模拟登录时你并不需要输入验证码，它直接返回的结果就是前面所说的下一步用到的J_Token，而有时候你则会需要输入验证码，等你手动输入验证码之后，重新请求登录一次。
博主是边写程序边更新文章的，现在写完了是否有必要输入验证码的检验以及在浏览器中呈现验证码。
代码如下
恩，请把里面的ua和password2还有用户名换成自己的进行尝试，用我的可能会产生错误的。
运行结果

然后会蹦出浏览器，显示了验证码的内容，这个需要你来手动输入。
在这里有小伙伴向我反映有这么个错误

经过查证，竟然是版本问题，博主本人用的是2.7.7，而小伙伴用的是2.7.9。后来换成2.7.7就好了…，我也是醉了，希望有相同错误的小伙伴，可以尝试换一下版本…
好啦，运行时会弹出浏览器，如图

那么，我们现在需要手动输入验证码，重新向登录界面发出登录请求，之前的post数据内容加入验证码这一项，重新请求一次，如果请求成功，则会返回下一步我们需要的J_HToken，如果验证码输入错误，则会返回验证码输入错误的选项。好，下面，我已经写到了获取J_HToken的进度，代码如下，现在运行程序，会蹦出浏览器，然后提示你输入验证码，用户手动输入之后，则会返回一个页面，我们提取出J_Htoken即可。
注意，到现在为止，你还没有登录成功，只是获取到了J_HToken的&#20540;。
目前写到的代码如下
现在的运行结果是这样的，我们已经可以得到J_HToken了，离成功又迈进了一步。

好，到现在为止，我们应该可以获取到J_HToken的&#20540;啦。
st也是一个经计算得到的code，可以这么理解，st是淘宝后台利用J_HToken以及其他数据经过计算之后得到的，可以利用st和用户名直接用get方式登录，所以st可以理解为一个秘钥。这个st&#20540;只会使用一次，如果第二次用get方式登录则会失效。所以它是一次性使用的。
下面J_HToken计算st的方法如下
得到st之后，基本上就大功告成啦，一段辛苦终于没有白费，你可以直接构建get方式请求的URL，直接访问这个URL便可以实现登录。
比如
直接访问该链接即可实现登录，不过我这个应该已经失效了吧~
代码在这先不贴了，剩下的一起贴了~
已买到的宝贝的页面地址是
另外还有页码的参数。
重新构建一个带有cookie的opener，将上面的带有st的URL打开，保存它的cookie，然后再利用这个opener打开已买到的宝贝的页面，你就会得到已买到的宝贝页面详情了。
正则表达式提取信息
这是我的已买到的宝贝界面，审查元素可以看到，每一个宝贝都是tbody标签包围着。
我们现在想获取订单时间，订单号，卖家店铺名称，宝贝名称，原价，购买数量，最后付款多少，交易状态这几个量，具体就不再分析啦，正则表达式还不熟悉的同学请参考前面所说的正则表达式的用法，在这里，正则表达式匹配的代码是
恩，你懂得，最重要的东西来了，经过博主2天多的奋战，代码基本就构建完成。写了两个类，其中提取页面信息的方法我单独放到了一个类中，叫tool.py，类名为Tool。
先看一下运行结果吧~

最终代码如下
好啦，运行结果就是上面贴的图片，可以成功获取到自己的商品列表，前提是把你们的用户名，ua，password2这三个设置好。
以上均为博主亲身所敲，代码写的不好，谨在此贴出和大家一起分享经验~
经过多次尝试，模拟登录淘宝终于成功了，实在是不容易，淘宝的登录加密和验证太复杂了，煞费苦心，在此写出来和大家一起分享，希望大家支持。
1.python模拟登录淘宝网页
2.获取登录用户的所有订单详情
3.学会应对出现验证码的情况
4.体会一下复杂的模拟登录机制
1.淘宝的密码用了AES加密算法，最终将密码转化为256位，在POST时，传输的是256位长度的密码。
2.淘宝在登录时必须要输入验证码，在经过几次尝试失败后最终获取了验证码图片让用户手动输入来验证。
3.淘宝另外有复杂且每天在变的ua加密算法，在程序中我们需要提前获取某一ua码才可进行模拟登录。
4.在获取最后的登录st码时，历经了多次请求和正则表达式提取，且st码只可使用一次。
1.手动到浏览器获取ua码以及加密后的密码，只获取一次即可，一劳永逸。
2.向登录界面发送登录请求，POST一系列参数，包括ua码以及密码等等，获得响应，提取验证码图像。
3.用户输入手动验证码，重新加入验证码数据再次用POST方式发出请求，获得响应，提取J_Htoken。
4.利用J_Htoken向alipay发出请求，获得响应，提取st码。
5.利用st码和用户名，重新发出登录请求，获得响应，提取重定向网址，存储cookie。
6.利用cookie向其他个人页面如订单页面发出请求，获得响应，提取订单详情。
是不是没看懂？没事，下面我将一点点说明自己模拟登录的过程，希望大家可以理解。
由于淘宝的ua算法和aes密码加密算法太复杂了，ua算法在淘宝每天都是在变化的，不过，这个内容你获取之后一直用即可，经过测试之后没有问题，一劳永逸。
那么ua和aes密码怎样获取呢？
我们就从浏览器里面直接获取吧，打开浏览器，找到淘宝的登录界面，按F12或者浏览器右键审查元素。
在这里我用的是火狐浏览器，首先记得在浏览器中设置一下显示持续日志，要不然页面跳转了你就看不到之前抓取的信息了。在这里截图如下：


好，那么接下来我们就从浏览器中获取ua和aes密码
点击网络选项卡，这时都是空的，什么数据也没有截取。这时你就在网页上登录一下试试吧，输入用户名啊，密码啊，有必要时需要输入验证码，点击登录。

等跳转成功后，你就可以看到好多日志记录了，点击图中的那一行login.taobo.com，然后查看参数，你就会发现表单数据了，其中就包括ua还有下面的password2，把这俩复制下来，我们之后要用到的。这就是我们需要的ua还有aes加密后的密码。

恩，读到这里，你应该获取到了属于自己的ua和password2两个内容。
经过博主本人亲自验证，有时候，在模拟登录时你并不需要输入验证码，它直接返回的结果就是前面所说的下一步用到的J_Token，而有时候你则会需要输入验证码，等你手动输入验证码之后，重新请求登录一次。
博主是边写程序边更新文章的，现在写完了是否有必要输入验证码的检验以及在浏览器中呈现验证码。
代码如下
恩，请把里面的ua和password2还有用户名换成自己的进行尝试，用我的可能会产生错误的。
运行结果

然后会蹦出浏览器，显示了验证码的内容，这个需要你来手动输入。
在这里有小伙伴向我反映有这么个错误

经过查证，竟然是版本问题，博主本人用的是2.7.7，而小伙伴用的是2.7.9。后来换成2.7.7就好了…，我也是醉了，希望有相同错误的小伙伴，可以尝试换一下版本…
好啦，运行时会弹出浏览器，如图

那么，我们现在需要手动输入验证码，重新向登录界面发出登录请求，之前的post数据内容加入验证码这一项，重新请求一次，如果请求成功，则会返回下一步我们需要的J_HToken，如果验证码输入错误，则会返回验证码输入错误的选项。好，下面，我已经写到了获取J_HToken的进度，代码如下，现在运行程序，会蹦出浏览器，然后提示你输入验证码，用户手动输入之后，则会返回一个页面，我们提取出J_Htoken即可。
注意，到现在为止，你还没有登录成功，只是获取到了J_HToken的&#20540;。
目前写到的代码如下
现在的运行结果是这样的，我们已经可以得到J_HToken了，离成功又迈进了一步。

好，到现在为止，我们应该可以获取到J_HToken的&#20540;啦。
st也是一个经计算得到的code，可以这么理解，st是淘宝后台利用J_HToken以及其他数据经过计算之后得到的，可以利用st和用户名直接用get方式登录，所以st可以理解为一个秘钥。这个st&#20540;只会使用一次，如果第二次用get方式登录则会失效。所以它是一次性使用的。
下面J_HToken计算st的方法如下
得到st之后，基本上就大功告成啦，一段辛苦终于没有白费，你可以直接构建get方式请求的URL，直接访问这个URL便可以实现登录。
比如
直接访问该链接即可实现登录，不过我这个应该已经失效了吧~
代码在这先不贴了，剩下的一起贴了~
已买到的宝贝的页面地址是
另外还有页码的参数。
重新构建一个带有cookie的opener，将上面的带有st的URL打开，保存它的cookie，然后再利用这个opener打开已买到的宝贝的页面，你就会得到已买到的宝贝页面详情了。
正则表达式提取信息
这是我的已买到的宝贝界面，审查元素可以看到，每一个宝贝都是tbody标签包围着。
我们现在想获取订单时间，订单号，卖家店铺名称，宝贝名称，原价，购买数量，最后付款多少，交易状态这几个量，具体就不再分析啦，正则表达式还不熟悉的同学请参考前面所说的正则表达式的用法，在这里，正则表达式匹配的代码是
恩，你懂得，最重要的东西来了，经过博主2天多的奋战，代码基本就构建完成。写了两个类，其中提取页面信息的方法我单独放到了一个类中，叫tool.py，类名为Tool。
先看一下运行结果吧~

最终代码如下
好啦，运行结果就是上面贴的图片，可以成功获取到自己的商品列表，前提是把你们的用户名，ua，password2这三个设置好。
以上均为博主亲身所敲，代码写的不好，谨在此贴出和大家一起分享经验~
