1、Numpy是什么
很简单，Numpy是Python的一个科学计算的库，提供了矩阵运算的功能，其一般与Scipy、matplotlib一起使用。其实，list已经提供了类&#20284;于矩阵的表示形式，不过numpy为我们提供了更多的函数。如果接触过matlab、scilab，那么numpy很好入手。在以下的代码示例中，总是先导入了numpy：
2、多维数组
多维数组的类型是：numpy.ndarray。
使用numpy.array方法
以list或tuple变量为参数产生一维数组：
例如，在从1到3中产生9个数：
例如：
[[0.
0.]


[0.
0.]]]
数组索引，切片，赋&#20540;
示例：
基本的数组运算
先构造数组a、b：
使用数组对象自带的方法：
使用numpy下的方法：
合并数组
使用numpy下的vstack和hstack函数：
看一下这两个函数有没有涉及到浅拷贝这种问题：
深拷贝数组
数组对象自带了浅拷贝和深拷贝的方法，但是一般用深拷贝多一些：
基本的矩阵运算
转置：
特征&#20540;、特征向量：

1、Numpy是什么
很简单，Numpy是Python的一个科学计算的库，提供了矩阵运算的功能，其一般与Scipy、matplotlib一起使用。其实，list已经提供了类&#20284;于矩阵的表示形式，不过numpy为我们提供了更多的函数。如果接触过matlab、scilab，那么numpy很好入手。在以下的代码示例中，总是先导入了numpy：
2、多维数组
多维数组的类型是：numpy.ndarray。
使用numpy.array方法
以list或tuple变量为参数产生一维数组：
例如，在从1到3中产生9个数：
例如：
[[0.
0.]


[0.
0.]]]
数组索引，切片，赋&#20540;
示例：
基本的数组运算
先构造数组a、b：
使用数组对象自带的方法：
使用numpy下的方法：
合并数组
使用numpy下的vstack和hstack函数：
看一下这两个函数有没有涉及到浅拷贝这种问题：
深拷贝数组
数组对象自带了浅拷贝和深拷贝的方法，但是一般用深拷贝多一些：
基本的矩阵运算
转置：
特征&#20540;、特征向量：

